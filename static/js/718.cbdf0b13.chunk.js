(self.webpackChunkencryption_toolkit=self.webpackChunkencryption_toolkit||[]).push([[718],{477:()=>{},7594:(t,e,r)=>{"use strict";r(6111);var n=r(932);function s(t){const e=Math.random()*Math.random();let r=t?Math.floor(1114112*e):Math.floor(1e4*e)+1;return Math.random()<.5&&(r=-r),r}function o(t){const e=atob(t),r=e.length,n=new Uint8Array(r);for(let s=0;s<r;s++)n[s]=e.charCodeAt(s);return n}function a(t){return(new TextDecoder).decode(t)}function i(t){return n.Ay.deflate(t)}function l(t){return n.Ay.inflate(t)}async function c(t,e){const r=new TextEncoder,n=crypto.getRandomValues(new Uint8Array(16)),s=crypto.getRandomValues(new Uint8Array(12)),o=await crypto.subtle.importKey("raw",r.encode(e),{name:"PBKDF2"},!1,["deriveKey"]),a=await crypto.subtle.deriveKey({name:"PBKDF2",salt:n,iterations:1e5,hash:"SHA-256"},o,{name:"AES-GCM",length:256},!1,["encrypt"]),i="string"===typeof t?r.encode(t):t,l=await crypto.subtle.encrypt({name:"AES-GCM",iv:s},a,i),c=new Uint8Array(n.length+s.length+l.byteLength);return c.set(n,0),c.set(s,n.length),c.set(new Uint8Array(l),n.length+s.length),c}async function u(t,e){const r=t,n=r.slice(0,16),s=r.slice(16,28),o=r.slice(28),a=new TextEncoder,i=await crypto.subtle.importKey("raw",a.encode(e),{name:"PBKDF2"},!1,["deriveKey"]),l=await crypto.subtle.deriveKey({name:"PBKDF2",salt:n,iterations:1e5,hash:"SHA-256"},i,{name:"AES-GCM",length:256},!1,["decrypt"]),c=await crypto.subtle.decrypt({name:"AES-GCM",iv:s},l,o);return new Uint8Array(c)}var f=r(6159),d=r.n(f);r(7361);!function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9999;Date.now().toString().slice(0,6),Math.floor(Math.random()*t)}();self.addEventListener("message",async t=>{const{type:e,load:r,dataPw:n,keyPw:f}=t.data;if("shuffle"===e){const{input:t,allChar:e}=r;let o=t;if(!o)return self.postMessage({type:"error",error:"No input provided."});try{const{shuffled:t,key:r}=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r={shuffled:"",key:[]};for(let n=0;n<t.length;n++){const o=t[n].codePointAt(0);let a,i;do{a=s(e),i=o+a}while(i>1114111||i<0||i>=55296&&i<=57343);r.shuffled+=String.fromCodePoint(i),r.key.push(a)}return r.key=r.key.join(","),{shuffled:r.shuffled,key:r.key}}(o,e);let a="",l="";if(n&&f)try{const e=i(t),s=i(r);a=await c(e,n),l=await c(s,f)}catch(m){var y;self.postMessage({type:"error",error:null!==(y=null===m||void 0===m?void 0:m.message)&&void 0!==y?y:String(m)})}self.postMessage({type:"done-shuffle",result:{shuffled:t,key:r},encryptedData:a,encryptedKey:l})}catch(m){var h;self.postMessage({type:"error",error:null!==(h=null===m||void 0===m?void 0:m.message)&&void 0!==h?h:String(m)})}}else if("unshuffle"===e){let{shuffled:e,key:s}=r;try{if(n&&f)try{const t=await u(e,n),r=await u(s,f),o=l(t),i=l(r);e=a(o),s=a(i)}catch(m){var p;self.postMessage({type:"error",error:null!==(p=null===m||void 0===m?void 0:m.message)&&void 0!==p?p:String(m)})}const r=await async function(t,e){const r=e.split(",").map(Number);let n="",s=0;for(const a of t){var o;let t=(a.codePointAt(0)-(null!==(o=r[s++])&&void 0!==o?o:0)+1114111)%1114111;n+=String.fromCodePoint(t)}return n}(e,s);let i,c;try{const e=o(r);c=await async function(e){if(e.length>=2&&236===e[0]&&1===e[1])return"ec";const r=[...e.slice(0,8)].map(t=>t.toString(16).padStart(2,"0")).join("").toUpperCase();if(r.startsWith("504B0304"))try{const t=await d().loadAsync(e),r=Object.keys(t.files);return r.some(t=>t.startsWith("word/"))?"docx":r.some(t=>t.startsWith("xl/"))?"xlsx":r.some(t=>t.startsWith("ppt/"))?"pptx":"zip"}catch(t){return"zip"}if(r.startsWith("89504E47"))return"png";if(r.startsWith("FFD8FF"))return"jpg";if(r.startsWith("25504446"))return"pdf";if(r.startsWith("47494638"))return"gif";if(r.includes("66747970"))return"mp4";if(r.startsWith("52494646"))return"wav";if(r.startsWith("000001BA"))return"mpg";if(e.slice(0,512).some(t=>t<9||t>13&&t<32||t>126))return"bin";const n=(new TextDecoder).decode(e.slice(0,1024)).trim();return n.startsWith("{")||n.startsWith("[")?"json":n.includes(",")&&n.match(/\n|;/)?"csv":"txt"}(e),i="bin"!==c?o(r):r}catch(m){i=r,c="txt"}self.postMessage({type:"done-unshuffle",result:{output:i,ext:c}})}catch(m){var g;self.postMessage({type:"error",error:null!==(g=null===m||void 0===m?void 0:m.message)&&void 0!==g?g:String(m)})}}})}}]);
//# sourceMappingURL=718.cbdf0b13.chunk.js.map